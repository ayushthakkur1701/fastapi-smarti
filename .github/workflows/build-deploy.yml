name: Build and Deploy Code

on: [push,pull_request]
  # push:
  #   branches:
  #     - "main"
  #     - "dev"
  # pull_request:
  #   branches:
  #     - "dev"
jobs:
  build:
    environment:
      name: testing
    env:
      DATABASE_HOSTNAME : ${{secrets.DATABASE_HOSTNAME}}
      DATABASE_PORT : ${{secrets.DATABASE_PORT}}
      DATABASE_USERNAME : ${{secrets.DATABASE_USERNAME}}
      DATABASE_PASSWORD : ${{secrets.DATABASE_PASSWORD}}
      DATABASE_NAME : ${{secrets.DATABASE_NAME}}
      SECRET_KEY : ${{secrets.SECRET_KEY}}
      ALGORITHM : ${{secrets.ALGORITHM}}
      ACCESS_TOKEN_EXPIRE_MINUTES : ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}}
    
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD : ${{secrets.DATABASE_PASSWORD}}
          POSTGRES_DB : ${{secrets.DATABASE_NAME}}_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    runs-on: ubuntu-latest
    steps:
      - name: pulling git repo
        uses: actions/checkout@v2
      - name: Install Pythen Version 3.11
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'
      - name: update pip
        run: python -m pip install --upgrade pip
      - name: install all dependencies
        run: pip install -r requirements.txt
      - name: Test with Pytest
        run: |
          pip install pytest
          pytest
      # - name: Log in to Docker Hub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKER_HUB_USERNAME }}
      #     password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
        
      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v3

      # - name: Build and push Docker image
      #   uses: docker/build-push-action@v6
      #   with:
      #     context: ./
      #     file: ./Dockerfile
      #     push: True 
      #     tags: ${{ secrets.DOCKER_HUB_USERNAME }}/fastapi:latest
      #     cache-from: type=local,src=/tmp/.buildx-cache
      #     cache-to: type=local,dest=/tmp/.buildx-cache
      # - name: Image Digest
      #   run: echo ${{ steps.docker_build.outputs.digest}}

  deploy:
    runs-on: ubuntu-latest
    needs: [ build ]
    environment:
      name: production
    steps:
      - name: Deploying To Ubuntu Server
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_USERNAME }}
          password: ${{ secrets.PROD_PASSWORD }}
          script: |
            cd app/src
            git pull
            echo ${{ secrets.PROD_PASSWORD }} | sudo -S systemctl restart api